#!/bin/bash
                                   #########
#################################### iSSH2 #####################################
#                                  #########                                   #
# Copyright (c) 2013 Tommaso Madonia. All rights reserved.                     #
#                                                                              #
# Permission is hereby granted, free of charge, to any person obtaining a copy #
# of this software and associated documentation files (the "Software"), to deal#
# in the Software without restriction, including without limitation the rights #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell    #
# copies of the Software, and to permit persons to whom the Software is        #
# furnished to do so, subject to the following conditions:                     #
#                                                                              #
# The above copyright notice and this permission notice shall be included in   #
# all copies or substantial portions of the Software.                          #
#                                                                              #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER       #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,#
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN    #
# THE SOFTWARE.                                                                #
################################################################################

downloadFile () {
  local url=$1
  local path=$2
  local filename=`basename "$2"`

  if [ ! -f "$path" ];
  then
    echo "Downloading $filename"
    curl -L --progress-bar "$url" > "$path"
  else
    echo "$filename already exists"
  fi

  local md5=`md5 -q $path`
  echo "MD5: $md5"
}

# This hack is so dirty I had to shower several times and I still do not feel clean
# It fixes lipo failing due to libssh somehow building arm64 in the x86_64 sim build
# and probably others
fixLipoInputs () {
  local inputs=$1
  local arch=$2

  for input in $inputs; do
    lipoarchs=`lipo -archs $input`
    
    for lipoarch in $lipoarchs; do

      if [[ "$arch" != "$lipoarch" ]]; then
        echo "Stripping $lipoarch strangely found in build for $arch"
	lipo $input -remove $lipoarch -output $input
      fi

    done
  done
}

lipoFatLibrary () {
  local inputs=$1
  local output=$2
  local dirname=`dirname "$2"`
  local filename=`basename "$2"`

  echo "Building $filename fat library..."

  if [ ! -e "$dirname" ];
  then
    mkdir -p "$dirname"
  fi

  if [ -e "$output" ];
  then
    rm -f "$output"
  fi

  lipo -create $inputs -output "$output"
}

importHeaders () {
  local input=$1
  local output=$2

  echo "Copying headers..."
  rm -rf "$output"
  mkdir -p "$output"
  cp -RL "$input" "$output"
}

importHeaders2 () {
  local input=$1
  local output=$2
    
  echo "Copying headers..."
  cp -RL "$input" "$output"
}

platformName () {
  case "$1" in
    macosx) echo "MacOSX" ;;
    iphoneos)
      if [[ "$2" == "i386" ]] || [[ "$2" == "x86_64" ]]; then
        echo "iPhoneSimulator"
      else
        echo "iPhoneOS"
      fi ;;
    iphonesimulator) echo "iPhoneSimulator" ;;
    appletvos)
      if [[ "$2" == "i386" ]] || [[ "$2" == "x86_64" ]]; then
        echo "AppleTVSimulator"
      else
        echo "AppleTVOS"
      fi ;;
    watchos)
      if [[ "$2" == "i386" ]] || [[ "$2" == "x86_64" ]]; then
        echo "WatchSimulator"
      else
        echo "WatchOS"
      fi ;;
    *) echo "Unknown platform $1"
       exit 1 ;;
  esac
}
